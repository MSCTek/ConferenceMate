// <auto-generated> - Template:MvvmLightModelObject, Version:1.1, Id:c644a31c-7ebc-4383-bc7f-0ea7c5bf6ed4
using GalaSoft.MvvmLight;

namespace MSC.CM.Xam.ModelObj.CM
{
	public partial class Log : ObservableObject
	{
		public Log()
		{
			InitializePartial();
		}

		private string _clientIpAddress;
		private System.DateTime _date;
		private string _exception;
		private long? _executionTimeInMilliseconds;
		private string _httpResponseStatusCode;
		private int _id;
		private string _level;
		private string _logger;
		private System.Guid? _logGuid;
		private int? _logMessageTypeId;
		private string _message;
		private string _methodName;
		private string _thread;
		private string _url;
		private string _userName;


		public string ClientIpAddress
		{
			get { return _clientIpAddress; }
			set
			{
				Set<string>(() => ClientIpAddress, ref _clientIpAddress, value);
				RunCustomLogicSetClientIpAddress(value);
			}
		}

		public System.DateTime Date
		{
			get { return _date; }
			set
			{
				Set<System.DateTime>(() => Date, ref _date, value);
				RunCustomLogicSetDate(value);
			}
		}

		public string Exception
		{
			get { return _exception; }
			set
			{
				Set<string>(() => Exception, ref _exception, value);
				RunCustomLogicSetException(value);
			}
		}

		public long? ExecutionTimeInMilliseconds
		{
			get { return _executionTimeInMilliseconds; }
			set
			{
				Set<long?>(() => ExecutionTimeInMilliseconds, ref _executionTimeInMilliseconds, value);
				RunCustomLogicSetExecutionTimeInMilliseconds(value);
			}
		}

		public string HttpResponseStatusCode
		{
			get { return _httpResponseStatusCode; }
			set
			{
				Set<string>(() => HttpResponseStatusCode, ref _httpResponseStatusCode, value);
				RunCustomLogicSetHttpResponseStatusCode(value);
			}
		}

		public int Id
		{
			get { return _id; }
			set
			{
				Set<int>(() => Id, ref _id, value);
				RunCustomLogicSetId(value);
			}
		}

		public string Level
		{
			get { return _level; }
			set
			{
				Set<string>(() => Level, ref _level, value);
				RunCustomLogicSetLevel(value);
			}
		}

		public string Logger
		{
			get { return _logger; }
			set
			{
				Set<string>(() => Logger, ref _logger, value);
				RunCustomLogicSetLogger(value);
			}
		}

		public System.Guid? LogGuid
		{
			get { return _logGuid; }
			set
			{
				Set<System.Guid?>(() => LogGuid, ref _logGuid, value);
				RunCustomLogicSetLogGuid(value);
			}
		}

		public int? LogMessageTypeId
		{
			get { return _logMessageTypeId; }
			set
			{
				Set<int?>(() => LogMessageTypeId, ref _logMessageTypeId, value);
				RunCustomLogicSetLogMessageTypeId(value);
			}
		}

		public string Message
		{
			get { return _message; }
			set
			{
				Set<string>(() => Message, ref _message, value);
				RunCustomLogicSetMessage(value);
			}
		}

		public string MethodName
		{
			get { return _methodName; }
			set
			{
				Set<string>(() => MethodName, ref _methodName, value);
				RunCustomLogicSetMethodName(value);
			}
		}

		public string Thread
		{
			get { return _thread; }
			set
			{
				Set<string>(() => Thread, ref _thread, value);
				RunCustomLogicSetThread(value);
			}
		}

		public string Url
		{
			get { return _url; }
			set
			{
				Set<string>(() => Url, ref _url, value);
				RunCustomLogicSetUrl(value);
			}
		}

		public string UserName
		{
			get { return _userName; }
			set
			{
				Set<string>(() => UserName, ref _userName, value);
				RunCustomLogicSetUserName(value);
			}
		}



		partial void InitializePartial();

		#region RunCustomLogicSet

		partial void RunCustomLogicSetClientIpAddress(string value);
		partial void RunCustomLogicSetDate(System.DateTime value);
		partial void RunCustomLogicSetException(string value);
		partial void RunCustomLogicSetExecutionTimeInMilliseconds(long? value);
		partial void RunCustomLogicSetHttpResponseStatusCode(string value);
		partial void RunCustomLogicSetId(int value);
		partial void RunCustomLogicSetLevel(string value);
		partial void RunCustomLogicSetLogger(string value);
		partial void RunCustomLogicSetLogGuid(System.Guid? value);
		partial void RunCustomLogicSetLogMessageTypeId(int? value);
		partial void RunCustomLogicSetMessage(string value);
		partial void RunCustomLogicSetMethodName(string value);
		partial void RunCustomLogicSetThread(string value);
		partial void RunCustomLogicSetUrl(string value);
		partial void RunCustomLogicSetUserName(string value);

		#endregion RunCustomLogicSet

	}
}
