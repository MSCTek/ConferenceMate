// <auto-generated> - Template:ModelsBackedByDto, Version:1.1, Id:f1539c0d-024f-4b1f-b346-132cdd9dd31f
using CodeGenHero.Logging;
using CodeGenHero.DataService;
using System;
using System.Collections.Generic;
using System.Linq;
using MSC.ConferenceMate.API.Client.Interface;
using MSC.ConferenceMate.Model.CM.Interface;
using xDTO = MSC.ConferenceMate.DTO.CM;

namespace MSC.ConferenceMate.Model.CM
{

	public class LoadRequestUserProfile : EventArgs
	{
		public LoadRequestUserProfile(string propertyNameRequestingLoad)
		{
			PropertyNameRequestingLoad = propertyNameRequestingLoad;
		}

		public string PropertyNameRequestingLoad { get; set; }
	}


	public partial class UserProfile : BaseModel<IWebApiDataServiceCM>, IUserProfile
	{
		public event EventHandler<LoadRequestUserProfile> OnLazyLoadRequest = delegate { }; // Empty delegate. Thus we are sure that value is always != null because no one outside of the class can change it.
		private xDTO.UserProfile _dto = null;

		public UserProfile(ILoggingService log, IDataService<IWebApiDataServiceCM> dataService) : base(log, dataService)
		{
			_dto = new xDTO.UserProfile();
			OnLazyLoadRequest += HandleLazyLoadRequest;
		}

		public UserProfile(ILoggingService log, IDataService<IWebApiDataServiceCM> dataService, xDTO.UserProfile dto) : this(log, dataService)
		{
			_dto = dto;
		}


		public virtual string AspNetUsersId { get { return _dto.AspNetUsersId; } }
		public virtual string AvatarUrl { get { return _dto.AvatarUrl; } }
		public virtual string Biography { get { return _dto.Biography; } }
		public virtual System.DateTime? BirthDate { get { return _dto.BirthDate; } }
		public virtual string BlogUrl { get { return _dto.BlogUrl; } }
		public virtual string CompanyName { get { return _dto.CompanyName; } }
		public virtual string CompanyWebsiteUrl { get { return _dto.CompanyWebsiteUrl; } }
		public virtual string CreatedBy { get { return _dto.CreatedBy; } }
		public virtual System.DateTime CreatedUtcDate { get { return _dto.CreatedUtcDate; } }
		public virtual int DataVersion { get { return _dto.DataVersion; } }
		public virtual string FirstName { get { return _dto.FirstName; } }
		public virtual int? GenderTypeId { get { return _dto.GenderTypeId; } }
		public virtual bool IsDeleted { get { return _dto.IsDeleted; } }
		public virtual string JobTitle { get { return _dto.JobTitle; } }
		public virtual System.DateTime LastLogin { get { return _dto.LastLogin; } }
		public virtual string LastName { get { return _dto.LastName; } }
		public virtual string LinkedInUrl { get { return _dto.LinkedInUrl; } }
		public virtual string ModifiedBy { get { return _dto.ModifiedBy; } }
		public virtual System.DateTime ModifiedUtcDate { get { return _dto.ModifiedUtcDate; } }
		public virtual System.Guid? PhotoBlobFileId { get { return _dto.PhotoBlobFileId; } }
		public virtual int PreferredLanguageId { get { return _dto.PreferredLanguageId; } }
		public virtual string TwitterUrl { get { return _dto.TwitterUrl; } }
		public virtual int UserProfileId { get { return _dto.UserProfileId; } }

		// Excluding 'AspNetUser' per configuration setting.
		private IBlobFile _blobFile = null; // Foreign Key
		private IGenderType _genderType = null; // Foreign Key
		private ILanguageType _languageType = null; // Foreign Key
		// Excluding 'Feedbacks' per configuration setting.
		// Excluding 'SessionLikes' per configuration setting.
		// Excluding 'SessionSpeakers' per configuration setting.


		public virtual IBlobFile BlobFile
		{
			get
			{
				if (_blobFile == null && _dto != null && _dto.BlobFile != null)
				{
					_blobFile = new BlobFile(Log, DataService, _dto.BlobFile);
				}

				return _blobFile;
			}
		}

		public virtual IGenderType GenderType
		{
			get
			{
				if (_genderType == null && _dto != null && _dto.GenderType != null)
				{
					_genderType = new GenderType(Log, DataService, _dto.GenderType);
				}

				return _genderType;
			}
		}

		public virtual ILanguageType LanguageType
		{
			get
			{
				if (_languageType == null && _dto != null && _dto.LanguageType != null)
				{
					_languageType = new LanguageType(Log, DataService, _dto.LanguageType);
				}

				return _languageType;
			}
		}



	}
}
