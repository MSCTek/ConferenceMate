// <auto-generated> - Template:ModelsBackedByDto, Version:1.1, Id:f1539c0d-024f-4b1f-b346-132cdd9dd31f
using CodeGenHero.Logging;
using CodeGenHero.DataService;
using System;
using System.Collections.Generic;
using System.Linq;
using MSC.ConferenceMate.API.Client.Interface;
using MSC.ConferenceMate.Model.CM.Interface;
using xDTO = MSC.ConferenceMate.DTO.CM;

namespace MSC.ConferenceMate.Model.CM
{

	public class LoadRequestSessionSpeaker : EventArgs
	{
		public LoadRequestSessionSpeaker(string propertyNameRequestingLoad)
		{
			PropertyNameRequestingLoad = propertyNameRequestingLoad;
		}

		public string PropertyNameRequestingLoad { get; set; }
	}


	public partial class SessionSpeaker : BaseModel<IWebApiDataServiceCM>, ISessionSpeaker
	{
		public event EventHandler<LoadRequestSessionSpeaker> OnLazyLoadRequest = delegate { }; // Empty delegate. Thus we are sure that value is always != null because no one outside of the class can change it.
		private xDTO.SessionSpeaker _dto = null;

		public SessionSpeaker(ILoggingService log, IDataService<IWebApiDataServiceCM> dataService) : base(log, dataService)
		{
			_dto = new xDTO.SessionSpeaker();
			OnLazyLoadRequest += HandleLazyLoadRequest;
		}

		public SessionSpeaker(ILoggingService log, IDataService<IWebApiDataServiceCM> dataService, xDTO.SessionSpeaker dto) : this(log, dataService)
		{
			_dto = dto;
		}


		public virtual string CreatedBy { get { return _dto.CreatedBy; } }
		public virtual System.DateTime CreatedUtcDate { get { return _dto.CreatedUtcDate; } }
		public virtual int DataVersion { get { return _dto.DataVersion; } }
		public virtual bool IsDeleted { get { return _dto.IsDeleted; } }
		public virtual string ModifiedBy { get { return _dto.ModifiedBy; } }
		public virtual System.DateTime ModifiedUtcDate { get { return _dto.ModifiedUtcDate; } }
		public virtual int SessionId { get { return _dto.SessionId; } }
		public virtual int UserId { get { return _dto.UserId; } }

		private ISession _session = null; // Foreign Key
		private IUser _user = null; // Foreign Key


		public virtual ISession Session
		{
			get
			{
				if (_session == null)
				{
					OnLazyLoadRequest(this, new LoadRequestSessionSpeaker(nameof(Session)));
				}

				return _session;
			}
		}

		public virtual IUser User
		{
			get
			{
				if (_user == null)
				{
					OnLazyLoadRequest(this, new LoadRequestSessionSpeaker(nameof(User)));
				}

				return _user;
			}
		}



	}
}
