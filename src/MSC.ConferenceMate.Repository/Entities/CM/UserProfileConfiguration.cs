// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace MSC.ConferenceMate.Repository.Entities.CM
{

    // UserProfile
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class UserProfileConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UserProfile>
    {
        public UserProfileConfiguration()
            : this("dbo")
        {
        }

        public UserProfileConfiguration(string schema)
        {
            ToTable("UserProfile", schema);
            HasKey(x => x.UserProfileId);

            Property(x => x.UserProfileId).HasColumnName(@"UserProfileId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AspNetUsersId).HasColumnName(@"AspNetUsersId").HasColumnType("nvarchar").IsRequired().HasMaxLength(128);
            Property(x => x.BirthDate).HasColumnName(@"BirthDate").HasColumnType("datetime2").IsOptional();
            Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.LastName).HasColumnName(@"LastName").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.GenderTypeId).HasColumnName(@"GenderTypeId").HasColumnType("int").IsOptional();
            Property(x => x.LastLogin).HasColumnName(@"LastLogin").HasColumnType("datetime2").IsRequired();
            Property(x => x.PreferredLanguageId).HasColumnName(@"PreferredLanguageId").HasColumnType("int").IsRequired();
            Property(x => x.Biography).HasColumnName(@"Biography").HasColumnType("nvarchar").IsOptional().HasMaxLength(4000);
            Property(x => x.PhotoBlobFileId).HasColumnName(@"PhotoBlobFileId").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.AvatarUrl).HasColumnName(@"AvatarUrl").HasColumnType("nvarchar").IsOptional().HasMaxLength(1000);
            Property(x => x.CompanyName).HasColumnName(@"CompanyName").HasColumnType("nvarchar").IsOptional().HasMaxLength(1000);
            Property(x => x.JobTitle).HasColumnName(@"JobTitle").HasColumnType("nvarchar").IsOptional().HasMaxLength(1000);
            Property(x => x.CompanyWebsiteUrl).HasColumnName(@"CompanyWebsiteUrl").HasColumnType("nvarchar").IsOptional().HasMaxLength(1000);
            Property(x => x.BlogUrl).HasColumnName(@"BlogUrl").HasColumnType("nvarchar").IsOptional().HasMaxLength(1000);
            Property(x => x.TwitterUrl).HasColumnName(@"TwitterUrl").HasColumnType("nvarchar").IsOptional().HasMaxLength(1000);
            Property(x => x.LinkedInUrl).HasColumnName(@"LinkedInUrl").HasColumnType("nvarchar").IsOptional().HasMaxLength(1000);
            Property(x => x.DataVersion).HasColumnName(@"DataVersion").HasColumnType("int").IsRequired();
            Property(x => x.CreatedUtcDate).HasColumnName(@"CreatedUtcDate").HasColumnType("datetime2").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(200);
            Property(x => x.ModifiedUtcDate).HasColumnName(@"ModifiedUtcDate").HasColumnType("datetime2").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("nvarchar").IsRequired().HasMaxLength(200);
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasOptional(a => a.BlobFile).WithMany(b => b.UserProfiles).HasForeignKey(c => c.PhotoBlobFileId).WillCascadeOnDelete(false); // FK_UserProfile_BlobFile
            HasOptional(a => a.GenderType).WithMany(b => b.UserProfiles).HasForeignKey(c => c.GenderTypeId).WillCascadeOnDelete(false); // FK_UserProfile_GenderType_GenderTypeId
            HasRequired(a => a.AspNetUser).WithMany(b => b.UserProfiles).HasForeignKey(c => c.AspNetUsersId).WillCascadeOnDelete(false); // FK_UserProfile_AspNetUsers
            HasRequired(a => a.LanguageType).WithMany(b => b.UserProfiles).HasForeignKey(c => c.PreferredLanguageId).WillCascadeOnDelete(false); // FK_UserProfile_LanguageType
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
